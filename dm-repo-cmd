#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

import getopt
import json
import os
import re
import shutil
import sys

from hecatoncheir import DbProfilerRepository
from hecatoncheir import logger as log
from hecatoncheir.msgutil import gettext as _


def usage():
    print '''
Usage: %s [options...] [repo file] [cmd] [args...]

Commands:
    ls
    rm <db.schema.table>

Options:
    --help      Print this help.

''' % os.path.basename(sys.argv[0])

input_encoding = 'utf-8'


def cmd_ls(repo):
    for t in repo.get_table_list():
        print(u'%s.%s.%s' % (t[0], t[1], t[2]))
    return True


def cmd_rm(repo, args):
    for a in args:
        tmp = a.split('.')
        if len(tmp) != 3:
            log.warning(_(u'Skipping `%s\'.') % a)
            continue
        repo.remove_table(tmp[0], tmp[1], tmp[2])
    return True

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "",
                                   ["help", "debug"])
    except getopt.GetoptError as err:
        log.error(unicode(err))
        usage()
        sys.exit(1)

    debug = False

    for o, a in opts:
        if o in ("--debug"):
            debug = True
        elif o in ("--help"):
            usage()
            sys.exit(0)
        else:
            log.error("unexpected option. internal error.")
            sys.exit(1)

    if len(args) < 2:
        log.error(_("Too few arguments."))
        usage()
        sys.exit(1)

    repo = DbProfilerRepository.DbProfilerRepository(args[0])
    repo.open()

    args = [x.decode(input_encoding) for x in args]
    ret = False
    if args[1] == 'ls':
        ret = cmd_ls(repo)
    elif args[1] == 'rm':
        ret = cmd_rm(repo, args[2:])

    repo.close()
    sys.exit(0 if ret else 1)
